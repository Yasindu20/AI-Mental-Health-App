# Generated by Django 5.2.4 on 2025-07-20 06:03

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('meditation', '0003_meditation_content_source_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentSyncJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('original', 'Original Content'), ('youtube', 'YouTube'), ('spotify', 'Spotify'), ('spotify_podcast', 'Spotify Podcast'), ('huggingface', 'Hugging Face'), ('huggingface_ai', 'AI Generated'), ('curated', 'Curated Content'), ('community', 'Community Submission')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_items', models.IntegerField(default=0)),
                ('processed_items', models.IntegerField(default=0)),
                ('new_items', models.IntegerField(default=0)),
                ('updated_items', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalAPIQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('original', 'Original Content'), ('youtube', 'YouTube'), ('spotify', 'Spotify'), ('spotify_podcast', 'Spotify Podcast'), ('huggingface', 'Hugging Face'), ('huggingface_ai', 'AI Generated'), ('curated', 'Curated Content'), ('community', 'Community Submission')], max_length=20, unique=True)),
                ('daily_requests', models.IntegerField(default=0)),
                ('monthly_requests', models.IntegerField(default=0)),
                ('daily_limit', models.IntegerField()),
                ('monthly_limit', models.IntegerField()),
                ('last_reset_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalContentUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(default=0)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('helpful', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='UserExternalPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_sources', models.JSONField(blank=True, default=list)),
                ('blocked_sources', models.JSONField(blank=True, default=list)),
                ('preferred_external_types', models.JSONField(blank=True, default=list)),
                ('max_external_duration', models.IntegerField(default=30)),
                ('min_external_duration', models.IntegerField(default=5)),
                ('min_effectiveness_score', models.FloatField(default=0.3)),
                ('prefer_high_quality', models.BooleanField(default=True)),
                ('youtube_quality_preference', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('any', 'Any')], default='high', max_length=10)),
                ('spotify_preview_only', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='meditation',
            options={'ordering': ['-effectiveness_score', '-popularity_score', '-created_at']},
        ),
        migrations.RenameField(
            model_name='meditation',
            old_name='last_updated',
            new_name='updated_at',
        ),
        migrations.RemoveField(
            model_name='meditation',
            name='content_source_id',
        ),
        migrations.RemoveField(
            model_name='meditation',
            name='external_audio_url',
        ),
        migrations.AddField(
            model_name='meditation',
            name='album_name',
            field=models.CharField(blank=True, help_text='Spotify album', max_length=200),
        ),
        migrations.AddField(
            model_name='meditation',
            name='artist_name',
            field=models.CharField(blank=True, help_text='For external content', max_length=200),
        ),
        migrations.AddField(
            model_name='meditation',
            name='channel_name',
            field=models.CharField(blank=True, help_text='YouTube channel', max_length=200),
        ),
        migrations.AddField(
            model_name='meditation',
            name='downloads',
            field=models.IntegerField(default=0, help_text='HuggingFace downloads'),
        ),
        migrations.AddField(
            model_name='meditation',
            name='external_id',
            field=models.CharField(blank=True, help_text='External API ID', max_length=200),
        ),
        migrations.AddField(
            model_name='meditation',
            name='last_synced',
            field=models.DateTimeField(auto_now=True, help_text='Last sync from external API'),
        ),
        migrations.AddField(
            model_name='meditation',
            name='like_count',
            field=models.BigIntegerField(default=0, help_text='YouTube likes'),
        ),
        migrations.AddField(
            model_name='meditation',
            name='spotify_popularity',
            field=models.IntegerField(default=0, help_text='Spotify popularity score'),
        ),
        migrations.AddField(
            model_name='meditation',
            name='spotify_url',
            field=models.URLField(blank=True, help_text='Spotify track/playlist URL'),
        ),
        migrations.AddField(
            model_name='meditation',
            name='view_count',
            field=models.BigIntegerField(default=0, help_text='YouTube views'),
        ),
        migrations.AddField(
            model_name='usermeditationprofile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 7, 20, 6, 3, 9, 708863, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='usermeditationprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='audio_url',
            field=models.URLField(blank=True, help_text='Internal or Spotify audio URL'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='effectiveness_score',
            field=models.FloatField(default=0.5),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='instructions',
            field=models.JSONField(default=list, help_text='Step-by-step instructions'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='keywords',
            field=models.JSONField(default=list, help_text='For better search'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='name',
            field=models.CharField(max_length=300),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='prerequisites',
            field=models.JSONField(default=list, help_text='Required prior meditations'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='script',
            field=models.TextField(blank=True, help_text='Full meditation script'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='source',
            field=models.CharField(choices=[('original', 'Original Content'), ('youtube', 'YouTube'), ('spotify', 'Spotify'), ('spotify_podcast', 'Spotify Podcast'), ('huggingface', 'Hugging Face'), ('huggingface_ai', 'AI Generated'), ('curated', 'Curated Content'), ('community', 'Community Submission')], default='original', max_length=20),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='target_states',
            field=models.JSONField(default=list, help_text='Mental states this helps with'),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='type',
            field=models.CharField(choices=[('mindfulness', 'Mindfulness'), ('breathing', 'Breathing'), ('body_scan', 'Body Scan'), ('loving_kindness', 'Loving Kindness'), ('transcendental', 'Transcendental'), ('movement', 'Movement'), ('visualization', 'Visualization'), ('mantra', 'Mantra'), ('progressive_relaxation', 'Progressive Relaxation'), ('zen', 'Zen'), ('chakra', 'Chakra'), ('sound_bath', 'Sound Bath'), ('contemplative', 'Contemplative'), ('self_compassion', 'Self Compassion'), ('forgiveness', 'Forgiveness'), ('healing', 'Healing'), ('somatic', 'Somatic'), ('gazing', 'Gazing'), ('nature', 'Nature'), ('concentration', 'Concentration'), ('cognitive', 'Cognitive'), ('compassion', 'Compassion'), ('sleep', 'Sleep'), ('ambient', 'Ambient')], max_length=30),
        ),
        migrations.AlterField(
            model_name='meditation',
            name='video_url',
            field=models.URLField(blank=True, help_text='Internal or YouTube video URL'),
        ),
        migrations.AlterField(
            model_name='usermeditationprofile',
            name='favorite_meditations',
            field=models.ManyToManyField(blank=True, related_name='favorited_by', to='meditation.meditation'),
        ),
        migrations.AlterField(
            model_name='usermentalstateanalysis',
            name='primary_concern',
            field=models.CharField(choices=[('anxiety', 'Anxiety'), ('depression', 'Depression'), ('stress', 'Stress'), ('anger', 'Anger'), ('grief', 'Grief'), ('insomnia', 'Insomnia'), ('focus', 'Focus Issues'), ('self_esteem', 'Low Self-Esteem'), ('trauma', 'Trauma'), ('panic', 'Panic'), ('burnout', 'Burnout'), ('loneliness', 'Loneliness'), ('energy', 'Energy'), ('balance', 'Balance'), ('vitality', 'Vitality'), ('healing', 'Healing'), ('emotions', 'Emotions'), ('intuition', 'Intuition'), ('feminine', 'Feminine'), ('cycles', 'Cycles'), ('workplace', 'Workplace'), ('tension', 'Tension'), ('parenting', 'Parenting'), ('patience', 'Patience'), ('mindfulness', 'Mindfulness'), ('presence', 'Presence'), ('rushing', 'Rushing'), ('creativity', 'Creativity'), ('freedom', 'Freedom'), ('worry', 'Worry'), ('rumination', 'Rumination'), ('overthinking', 'Overthinking'), ('disconnection', 'Disconnection'), ('fatigue', 'Fatigue'), ('grounding', 'Grounding'), ('relationships', 'Relationships'), ('guilt', 'Guilt'), ('resentment', 'Resentment'), ('expansion', 'Expansion'), ('consciousness', 'Consciousness'), ('spiritual', 'Spiritual'), ('appreciation', 'Appreciation'), ('seeking', 'Seeking'), ('restlessness', 'Restlessness'), ('clarity', 'Clarity'), ('peace', 'Peace'), ('wisdom', 'Wisdom'), ('liberation', 'Liberation'), ('awareness', 'Awareness'), ('phobias', 'Phobias'), ('pain', 'Pain'), ('addiction', 'Addiction'), ('eating_disorders', 'Eating Disorders'), ('instability', 'Instability'), ('change', 'Change'), ('seriousness', 'Seriousness'), ('joy', 'Joy'), ('surrender', 'Surrender'), ('connection', 'Connection'), ('acceptance', 'Acceptance'), ('self_love', 'Self Love'), ('shame', 'Shame'), ('stuck', 'Stuck'), ('empathy', 'Empathy'), ('loss', 'Loss'), ('sadness', 'Sadness'), ('performance', 'Performance'), ('confidence', 'Confidence'), ('achievement', 'Achievement'), ('psychic', 'Psychic'), ('children', 'Children'), ('relaxation', 'Relaxation'), ('bedtime', 'Bedtime'), ('morning', 'Morning'), ('routine', 'Routine'), ('busy', 'Busy'), ('heart_health', 'Heart Health'), ('bereavement', 'Bereavement'), ('immunity', 'Immunity'), ('ptsd', 'PTSD'), ('patterns', 'Patterns'), ('general_wellness', 'General Wellness'), ('positivity', 'Positivity'), ('negativity', 'Negativity'), ('digital_wellness', 'Digital Wellness'), ('phone_addiction', 'Phone Addiction'), ('vision', 'Vision'), ('pineal', 'Pineal')], max_length=30),
        ),
        migrations.AddIndex(
            model_name='meditation',
            index=models.Index(fields=['external_id'], name='meditation__externa_7c6232_idx'),
        ),
        migrations.AddIndex(
            model_name='meditation',
            index=models.Index(fields=['source', 'external_id'], name='meditation__source_6f2f72_idx'),
        ),
        migrations.AddConstraint(
            model_name='meditation',
            constraint=models.UniqueConstraint(condition=models.Q(('external_id__isnull', False)), fields=('source', 'external_id'), name='unique_external_content'),
        ),
        migrations.AddField(
            model_name='externalcontentusage',
            name='meditation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meditation.meditation'),
        ),
        migrations.AddField(
            model_name='externalcontentusage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userexternalpreferences',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='external_preferences', to=settings.AUTH_USER_MODEL),
        ),
    ]
