# Generated by Django 5.2.4 on 2025-07-16 02:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meditation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('mindfulness', 'Mindfulness'), ('breathing', 'Breathing'), ('body_scan', 'Body Scan'), ('loving_kindness', 'Loving Kindness'), ('transcendental', 'Transcendental'), ('movement', 'Movement'), ('visualization', 'Visualization'), ('mantra', 'Mantra'), ('progressive_relaxation', 'Progressive Relaxation'), ('zen', 'Zen'), ('chakra', 'Chakra'), ('sound_bath', 'Sound Bath')], max_length=30)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('duration_minutes', models.IntegerField()),
                ('description', models.TextField()),
                ('instructions', models.JSONField()),
                ('benefits', models.JSONField(default=list)),
                ('target_states', models.JSONField(default=list)),
                ('audio_url', models.URLField(blank=True)),
                ('video_url', models.URLField(blank=True)),
                ('script', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('prerequisites', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('effectiveness_score', models.FloatField(default=0.0)),
                ('instructor_name', models.CharField(blank=True, max_length=200)),
                ('instructor_bio', models.TextField(blank=True)),
                ('background_music_url', models.URLField(blank=True)),
                ('thumbnail_url', models.URLField(blank=True)),
                ('source', models.CharField(choices=[('original', 'Original Content'), ('curated', 'Curated Content'), ('community', 'Community Submission'), ('api', 'External API')], default='original', max_length=50)),
                ('subcategory', models.CharField(blank=True, max_length=100)),
                ('keywords', models.JSONField(default=list)),
                ('times_played', models.IntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-effectiveness_score', '-popularity_score'],
            },
        ),
        migrations.CreateModel(
            name='MeditationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(default=0)),
                ('pre_mood_score', models.IntegerField()),
                ('post_mood_score', models.IntegerField(blank=True, null=True)),
                ('interruptions', models.IntegerField(default=0)),
                ('completion_percentage', models.FloatField(default=0)),
                ('helpful', models.BooleanField(null=True)),
                ('notes', models.TextField(blank=True)),
                ('meditation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meditation.meditation')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='UserMeditationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_types', models.JSONField(default=list)),
                ('preferred_duration', models.IntegerField(default=10)),
                ('preferred_time_of_day', models.CharField(default='morning', max_length=20)),
                ('current_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('total_sessions', models.IntegerField(default=0)),
                ('total_minutes', models.IntegerField(default=0)),
                ('consecutive_days', models.IntegerField(default=0)),
                ('last_session_date', models.DateField(blank=True, null=True)),
                ('avg_mood_improvement', models.FloatField(default=0)),
                ('most_effective_types', models.JSONField(default=dict)),
                ('completed_meditations', models.ManyToManyField(through='meditation.MeditationSession', to='meditation.meditation')),
                ('favorite_meditations', models.ManyToManyField(related_name='favorited_by', to='meditation.meditation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meditation_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='meditationsession',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meditation.usermeditationprofile'),
        ),
        migrations.CreateModel(
            name='UserMentalStateAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('anxiety_level', models.FloatField(default=0)),
                ('depression_level', models.FloatField(default=0)),
                ('stress_level', models.FloatField(default=0)),
                ('anger_level', models.FloatField(default=0)),
                ('focus_issues', models.FloatField(default=0)),
                ('primary_concern', models.CharField(choices=[('anxiety', 'Anxiety'), ('depression', 'Depression'), ('stress', 'Stress'), ('anger', 'Anger'), ('grief', 'Grief'), ('insomnia', 'Insomnia'), ('focus', 'Focus Issues'), ('self_esteem', 'Low Self-Esteem'), ('trauma', 'Trauma'), ('panic', 'Panic'), ('burnout', 'Burnout'), ('loneliness', 'Loneliness')], max_length=30)),
                ('secondary_concerns', models.JSONField(default=list)),
                ('emotional_tone', models.CharField(max_length=50)),
                ('key_themes', models.JSONField(default=list)),
                ('severity_score', models.FloatField()),
                ('confidence_score', models.FloatField()),
                ('recommended_meditation_types', models.JSONField(default=list)),
                ('recommended_duration', models.IntegerField()),
                ('urgency_level', models.CharField(max_length=20)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mental_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='MeditationRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance_score', models.FloatField()),
                ('personalization_score', models.FloatField()),
                ('recommended_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField()),
                ('viewed', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('meditation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meditation.meditation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
                ('mental_state_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meditation.usermentalstateanalysis')),
            ],
            options={
                'ordering': ['-recommended_at', '-relevance_score'],
            },
        ),
    ]
